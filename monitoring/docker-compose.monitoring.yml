version: '3.8'

services:
  # Prometheus для сбора метрик
  prometheus:
    image: prom/prometheus:latest
    container_name: mindarity-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`monitoring.mindarity.ru`) && PathPrefix(`/prometheus`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
    networks:
      - mindarity-network

  # Grafana для дашбордов
  grafana:
    image: grafana/grafana:latest
    container_name: mindarity-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`monitoring.mindarity.ru`) && PathPrefix(`/grafana`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
    networks:
      - mindarity-network

  # Node Exporter для системных метрик
  node-exporter:
    image: prom/node-exporter:latest
    container_name: mindarity-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - mindarity-network

  # cAdvisor для Docker контейнеров
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: mindarity-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    networks:
      - mindarity-network

  # Alertmanager для уведомлений
  alertmanager:
    image: prom/alertmanager:latest
    container_name: mindarity-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`monitoring.mindarity.ru`) && PathPrefix(`/alertmanager`)"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
      - "traefik.http.routers.alertmanager.tls=true"
      - "traefik.http.routers.alertmanager.tls.certresolver=letsencrypt"
    networks:
      - mindarity-network

  # Blackbox Exporter для мониторинга API
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: mindarity-blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox/blackbox.yml:/etc/blackbox_exporter/blackbox.yml
    command:
      - '--config.file=/etc/blackbox_exporter/blackbox.yml'
    networks:
      - mindarity-network

  # Redis Exporter для мониторинга Redis
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: mindarity-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    networks:
      - mindarity-network

  # Postgres Exporter для мониторинга базы данных
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: mindarity-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://mindarity_user:mindarity_password@postgres:5432/mindarity?sslmode=disable
    networks:
      - mindarity-network

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  mindarity-network:
    external: true
