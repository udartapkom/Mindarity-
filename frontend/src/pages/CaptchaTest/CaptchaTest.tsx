import React, { useState } from 'react';
import Captcha from '../../components/Captcha';
import './CaptchaTest.scss';

const CaptchaTest: React.FC = () => {
  const [isVerified, setIsVerified] = useState(false);
  const [verificationCount, setVerificationCount] = useState(0);

  const handleVerify = (isValid: boolean) => {
    setIsVerified(isValid);
    if (isValid) {
      setVerificationCount(prev => prev + 1);
    }
  };

  const handleRefresh = () => {
    setIsVerified(false);
  };

  return (
    <div className="captcha-test-page">
      <div className="captcha-test-container">
        <h1>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CAPTCHA</h1>
        <p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ CAPTCHA</p>
        
        <div className="test-info">
          <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {isVerified ? '‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ' : '‚ùå –ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ'}</p>
          <p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫:</strong> {verificationCount}</p>
        </div>

        <Captcha 
          onVerify={handleVerify}
          onRefresh={handleRefresh}
        />

        {isVerified && (
          <div className="success-message">
            <h3>üéâ CAPTCHA –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</h3>
            <p>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å —Ñ–æ—Ä–º–æ–π.</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default CaptchaTest;
