version: '3.8'

services:
  backend:
    environment:
      NODE_ENV: staging
      LOG_LEVEL: info
      CORS_ORIGIN: http://staging.mindarity.ru,https://staging.mindarity.ru
      # Staging-specific settings
      DATABASE_SYNCHRONIZE: "false"
      LOGGING: "true"
      DEBUG: "false"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-staging.rule=Host(`staging.mindarity.ru`) && PathPrefix(`/api`)"
      - "traefik.http.services.backend-staging.loadbalancer.server.port=3000"
      - "traefik.http.routers.backend-staging.tls=true"
      - "traefik.http.routers.backend-staging.tls.certresolver=letsencrypt"

  frontend:
    environment:
      NODE_ENV: staging
      VITE_API_URL: https://staging.mindarity.ru/api
      VITE_KEYCLOAK_URL: https://staging.mindarity.ru/auth
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-staging.rule=Host(`staging.mindarity.ru`)"
      - "traefik.http.services.frontend-staging.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend-staging.tls=true"
      - "traefik.http.routers.frontend-staging.tls.certresolver=letsencrypt"

  nginx:
    environment:
      NGINX_ENV: staging
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-staging.rule=Host(`staging.mindarity.ru`)"
      - "traefik.http.services.nginx-staging.loadbalancer.server.port=80"
      - "traefik.http.routers.nginx-staging.tls=true"
      - "traefik.http.routers.nginx-staging.tls.certresolver=letsencrypt"

  # Staging database
  postgres:
    environment:
      POSTGRES_DB: mindarity_staging
      POSTGRES_USER: mindarity_user
      POSTGRES_PASSWORD: mindarity_password
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data

volumes:
  postgres_staging_data:
